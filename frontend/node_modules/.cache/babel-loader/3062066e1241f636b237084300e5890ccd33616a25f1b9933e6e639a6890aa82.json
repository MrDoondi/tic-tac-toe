{"ast":null,"code":"var _jsxFileName = \"C:\\\\bot\\\\tic-tac-toe\\\\tic-tac-toe\\\\render-deployment\\\\frontend\\\\src\\\\components\\\\GameModeSelector.jsx\";\nimport React from 'react';\nimport './GameModeSelector.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameModeSelector = ({\n  selectedMode,\n  onModeSelect\n}) => {\n  const modes = [{\n    id: 'human-vs-human',\n    label: 'Human vs Human',\n    icon: 'üë•'\n  }, {\n    id: 'human-vs-bot',\n    label: 'Human vs Bot',\n    icon: 'ü§ñ'\n  }, {\n    id: 'bot-vs-bot',\n    label: 'Bot vs Bot',\n    icon: '‚ö°'\n  }, {\n    id: 'multiplayer',\n    label: 'Online Multiplayer',\n    icon: 'üåê'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-mode-selector\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Select Game Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mode-buttons\",\n      children: modes.map(mode => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `mode-button ${selectedMode === mode.id ? 'active' : ''}`,\n        onClick: () => onModeSelect(mode.id),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mode-icon\",\n          children: mode.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mode-label\",\n          children: mode.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)]\n      }, mode.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = GameModeSelector;\nexport default GameModeSelector;\nvar _c;\n$RefreshReg$(_c, \"GameModeSelector\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","GameModeSelector","selectedMode","onModeSelect","modes","id","label","icon","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","mode","onClick","_c","$RefreshReg$"],"sources":["C:/bot/tic-tac-toe/tic-tac-toe/render-deployment/frontend/src/components/GameModeSelector.jsx"],"sourcesContent":["import React from 'react';\r\nimport './GameModeSelector.css';\r\n\r\nconst GameModeSelector = ({ selectedMode, onModeSelect }) => {\r\n  const modes = [\r\n    { id: 'human-vs-human', label: 'Human vs Human', icon: 'üë•' },\r\n    { id: 'human-vs-bot', label: 'Human vs Bot', icon: 'ü§ñ' },\r\n    { id: 'bot-vs-bot', label: 'Bot vs Bot', icon: '‚ö°' },\r\n    { id: 'multiplayer', label: 'Online Multiplayer', icon: 'üåê' }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"game-mode-selector\">\r\n      <h3>Select Game Mode</h3>\r\n      <div className=\"mode-buttons\">\r\n        {modes.map((mode) => (\r\n          <button\r\n            key={mode.id}\r\n            className={`mode-button ${selectedMode === mode.id ? 'active' : ''}`}\r\n            onClick={() => onModeSelect(mode.id)}\r\n          >\r\n            <span className=\"mode-icon\">{mode.icon}</span>\r\n            <span className=\"mode-label\">{mode.label}</span>\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameModeSelector; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,YAAY;EAAEC;AAAa,CAAC,KAAK;EAC3D,MAAMC,KAAK,GAAG,CACZ;IAAEC,EAAE,EAAE,gBAAgB;IAAEC,KAAK,EAAE,gBAAgB;IAAEC,IAAI,EAAE;EAAK,CAAC,EAC7D;IAAEF,EAAE,EAAE,cAAc;IAAEC,KAAK,EAAE,cAAc;IAAEC,IAAI,EAAE;EAAK,CAAC,EACzD;IAAEF,EAAE,EAAE,YAAY;IAAEC,KAAK,EAAE,YAAY;IAAEC,IAAI,EAAE;EAAI,CAAC,EACpD;IAAEF,EAAE,EAAE,aAAa;IAAEC,KAAK,EAAE,oBAAoB;IAAEC,IAAI,EAAE;EAAK,CAAC,CAC/D;EAED,oBACEP,OAAA;IAAKQ,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjCT,OAAA;MAAAS,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBb,OAAA;MAAKQ,SAAS,EAAC,cAAc;MAAAC,QAAA,EAC1BL,KAAK,CAACU,GAAG,CAAEC,IAAI,iBACdf,OAAA;QAEEQ,SAAS,EAAE,eAAeN,YAAY,KAAKa,IAAI,CAACV,EAAE,GAAG,QAAQ,GAAG,EAAE,EAAG;QACrEW,OAAO,EAAEA,CAAA,KAAMb,YAAY,CAACY,IAAI,CAACV,EAAE,CAAE;QAAAI,QAAA,gBAErCT,OAAA;UAAMQ,SAAS,EAAC,WAAW;UAAAC,QAAA,EAAEM,IAAI,CAACR;QAAI;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC9Cb,OAAA;UAAMQ,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAEM,IAAI,CAACT;QAAK;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,GAL3CE,IAAI,CAACV,EAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMN,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACI,EAAA,GAzBIhB,gBAAgB;AA2BtB,eAAeA,gBAAgB;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}